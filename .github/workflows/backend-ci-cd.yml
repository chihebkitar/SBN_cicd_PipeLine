name: Backend CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  # -----------------------------------------------------
  # 1) CI Job: Build, Test, Coverage, Dependency Check
  # -----------------------------------------------------
  build-test-scan:
    name: Build, Test, and Scan
    runs-on: ubuntu-latest

    steps:
      # Step A: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step B: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # Step C: Build & Test (runs OWASP dependency-check, Jacoco coverage, etc.)
      - name: Build & Test
        run: |
          mvn clean verify
          # "verify" triggers the full lifecycle:
          # - Unit tests
          # - Integration tests (if any)
          # - Code coverage (JaCoCo)
          # - OWASP dependency-check from your pom.xml

      # Step D: Upload test results & coverage reports
      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports

      - name: Archive Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: target/site/jacoco

  # -----------------------------------------------------
  # 2) SAST Job: CodeQL Analysis
  # -----------------------------------------------------
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write  # Required for uploading results
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # -----------------------------------------------------
  # 3) Build & Scan Docker Image + Push to Docker Hub
  # -----------------------------------------------------
  docker-build-scan-push:
    name: Docker Build, Scan, and Push
    runs-on: ubuntu-latest
    needs: [build-test-scan]  # Only run if Build & Test passes
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Docker Build
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/book-network-backend:latest .

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ secrets.DOCKER_HUB_USERNAME }}/book-network-backend:latest
          severity: 'CRITICAL'
          exit-code: 1
          ignore-unfixed: true

      - name: Docker Login
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/book-network-backend:latest

  # -----------------------------------------------------
  # 4) Deploy to Railway (Docker-based Service)
  # -----------------------------------------------------
  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: [ docker-build-scan-push ]

    steps:
      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Redeploy Docker Service
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway service redeploy "book-network-backend"